Назовите четыре основных вида ошибок и кратко опишите их.

Синтаксические ошибки: Ошибки, возникающие из-за неправильного написания кода, нарушения правил языка программирования (например, пропущенная точка с запятой, неверная структура выражений).
Ошибки времени выполнения: Ошибки, возникающие во время выполнения программы (например, деление на ноль, попытка доступа к несуществующему элементу массива).
Логические ошибки: Ошибки, возникающие из-за неправильной логики программы, когда программа работает без ошибок, но результаты неверны (например, неверно написанные условия в операторе if).
Ошибки времени компиляции: Ошибки, обнаруживаемые компилятором, не позволяющие программе скомпилироваться (например, использование неинициализированных переменных).
Какие виды ошибок в студенческих программах можно прогнозировать?

Наиболее распространенные ошибки в студенческих программах включают синтаксические ошибки, логические ошибки, ошибки времени выполнения и ошибки, связанные с неправильным использованием библиотек и функций.
Что должен гарантировать любой законченный проект?

Любой законченный проект должен гарантировать корректность выполнения, функциональность в соответствии с требованиями, безопасность и надёжность, а также соответствие спецификации и документации.
Перечислите три подхода к исключению ошибок в программе и разработке правильного программного обеспечения.

Тестирование: Написание и выполнение тестов для проверки правильности работы программы.
Код ревью: Анализ и проверка кода другими разработчиками для выявления и исправления ошибок.
Статический анализ кода: Использование инструментов для автоматической проверки кода на наличие ошибок и потенциальных уязвимостей.
Почему мы ненавидим отладку?

Отладка может быть трудоемкой, требует много времени и терпения, а также может быть сложной и разочаровывающей, особенно при работе с запутанным и плохо документированным кодом.
Что такое синтаксическая ошибка? Приведите пять примеров.

Синтаксическая ошибка — это ошибка в структуре кода, нарушающая правила языка программирования. Примеры:
Пропущенная точка с запятой в конце строки.
Неправильно закрытая скобка.
Пропущенное ключевое слово.
Неправильное объявление переменной.
Ошибки в использовании операторов (например, двойное равно вместо одиночного).
Что такое ошибка типа? Приведите пять примеров.

Ошибка типа возникает, когда операция выполняется с данными неправильного типа. Примеры:
Попытка сложить строку и число.
Присваивание значения неправильного типа переменной.
Вызов функции с аргументом неправильного типа.
Попытка индексирования строки с помощью вещественного числа.
Использование оператора сравнения для объектов несовместимых типов.
Что такое ошибка этапа редактирования связей? Приведите три примера.

Ошибка этапа редактирования связей (linking error) — это ошибка, возникающая во время линковки программы, когда объектные файлы объединяются в исполняемый файл. Примеры:
Отсутствие определения функции, вызываемой в программе.
Многократное определение одной и той же функции или переменной.
Ссылки на несуществующие внешние библиотеки или модули.
Что такое логическая ошибка? Приведите три примера.

Логическая ошибка — это ошибка в алгоритме или логике программы, из-за которой программа работает некорректно. Примеры:
Неправильно написанное условие в операторе if.
Ошибочная формула вычисления.
Неправильный порядок выполнения операций.
Перечислите четыре источника потенциальных ошибок, рассмотренных в тексте.

Источники могут включать:
Неправильное использование переменных.
Ошибки в логике программы.
Некорректное использование библиотек и функций.
Ошибки ввода-вывода.
Как распознать разумные результаты? Какие методы используются для ответа на этот вопрос?

Разумные результаты можно распознать с помощью:
Тестирования с заранее известными правильными результатами.
Сравнения с аналогичными программами или расчетами.
Использования инвариантов и других математических методов проверки.
Сравните обработку ошибки во время выполнения программы в модуле, вызывающем функцию, и в самой функции.

Обработка ошибки в модуле, вызывающем функцию, позволяет централизовать обработку ошибок и управлять ими на уровне вызова. Обработка ошибки в самой функции может быть полезной для непосредственного управления ошибками и обеспечения стабильной работы функции.
Почему использование исключений лучше, чем возврат признака ошибки?

Использование исключений позволяет отделить код обработки ошибок от основного кода программы, улучшает читабельность и упрощает отладку. Исключения автоматически распространяются вверх по стеку вызовов, что позволяет централизованно обрабатывать ошибки.
Как выполнить тестирование при последовательном вводе данных?

Тестирование при последовательном вводе данных включает создание тестов, которые подают данные в программу в определенном порядке и проверяют результаты на каждом этапе. Это помогает выявить ошибки, связанные с порядком обработки данных.
Опишите процесс генерирования и перехвата исключений.

Генерирование исключений происходит с помощью оператора throw (или аналогичного в других языках), когда программа обнаруживает ошибку. Перехват исключений осуществляется с помощью конструкции try-catch, которая позволяет обработать ошибку и принять необходимые меры.
Почему выражение v[v.size()] относительно вектора v порождает ошибку диапазона? Каким может быть результат такого вызова?

В выражении v[v.size()] происходит попытка доступа к элементу за пределами вектора, что вызывает ошибку диапазона. Результат такого вызова может быть непредсказуемым и зависит от реализации вектора, но часто приводит к краху программы.
Дайте определение пред- и постусловия; приведите пример (который отличается от функции area() из этой главы), предпочтительно использовав вычисления, требующие применения цикла.

Предусловие: Условие, которое должно быть выполнено перед выполнением функции. Пример: в функции нахождения среднего значения массива предусловие - массив не пустой.
Постусловие: Условие, которое должно быть выполнено после выполнения функции. Пример: после выполнения функции сумма элементов массива должна быть равна значению, указанному в постусловии.
В каких ситуациях можно не проверять предусловие?

Когда уверены, что предусловие всегда выполняется, например, если функция вызывается только из мест, где предусловие гарантировано.
В каких ситуациях можно не проверять постусловие?

Когда результат функции очевиден и гарантирован самой логикой функции.
Чем тестирование может помочь при отладке?

Тестирование помогает выявить ошибки и определить участки кода, в которых они возникают, облегчая процесс поиска и исправления ошибок.
Чем комментирование может помочь при отладке?

Комментирование помогает понять логику и структуру кода, облегчая процесс отладки и выявления ошибок.
Чем тестирование отличается от отладки?

Тестирование — это процесс проверки программы на соответствие требованиям и выявление ошибок. Отладка — это процесс поиска и исправления выявленных ошибок.